name: Development Deployment

on:
  push:
    branches:
      - feature/cicd

jobs:
  build:
    name: build binaries
#    defaults:
#      run:
#        working-directory: ./backend

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Login Docker
        uses: lagren/docker-gcr-action@master
        with:
          SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SA_KEY }}
          HOST: 'gcr.io'

      - run: sudo add-apt-repository ppa:cncf-buildpacks/pack-cli
      - run: sudo apt-get update
      - run: sudo apt-get install pack-cli
      - run: pack build backend_api --tag backend_api:latest --path backend/ --buildpack gcr.io/paketo-buildpacks/go --builder paketobuildpacks/builder:tiny --volume "$(pwd)/common:/common"
      - run: gcloud info

      - name: Tag Image
        run: docker tag backend_api:latest gcr.io/${{ secrets.GCP_PROJECT_ID }}/backend_api:latest
      - name: Push Image
        run: docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/backend_api:latest

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.4.0

      - run: gcloud container clusters get-credentials common --zone us-central1-c --project ${{ secrets.GCP_PROJECT_ID }}

      - run: helm upgrade --install backend deployment/k8s/backend/ --set image.repository=gcr.io/${{ secrets.GCP_PROJECT_ID }}/backend  --set image.tag=latest --create-namespace --namespace development
#      - name: Install Go
#        uses: actions/setup-go@v2
#        with:
#          go-version: 1.16.x
#      - uses: actions/checkout@v2
#
#      - uses: actions/cache@v2
#        with:
#          path: ~/go/pkg/mod
#          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
#          restore-keys: |
#            ${{ runner.os }}-go-
#
#      - name: go mod download
#        run:  go mod download
#
#      - name: Lint
#        run: make run-linter
#
#      - name: test
#        run: make test
#
#
#      - name: Upload coverage reports
#        uses: actions/upload-artifact@v2
#        with:
#          name: backend-coverage
#          retention-days: 5
#          path: backend/cover/
#
#      - name: build
#        run: make build
#
#      - name: Upload binaries
#        uses: actions/upload-artifact@v2
#        with:
#          name: backend-binaries
#          retention-days: 5
#          path: backend/bin/