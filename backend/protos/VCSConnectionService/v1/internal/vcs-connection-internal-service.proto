syntax = "proto3";
package alfred.vcs_connection.v1.internal;

option go_package = "/pb";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

service VCSConnectionInternalService {
    //internal
    rpc GetVCSConnection(GetVCSConnectionRequest) returns (VCSConnection);
    rpc CreateVCSConnection(CreateVCSConnectionRequest) returns (VCSConnection);
    rpc RevokeVCSToken(RevokeVCSTokenRequest) returns (google.protobuf.Empty);
    rpc RenewVCSToken(RenewVCSTokenRequest) returns (google.protobuf.Empty);
}

message VCSConnection {
    //id generated by uuid
    string id = 1;
    string label = 2;
    VCSConnectionProvider provider = 3;
    string connection_id = 4;
    string accessToken = 5;
    string refreshToken = 6 ;
    google.protobuf.Timestamp accessTokenExpiry = 7;
    google.protobuf.Timestamp refreshTokenExpiry = 8;
    bool revoked = 9;
    string account_id = 10;
}

message AccountVCSConnection{
    VCSConnectionProvider provider = 1;
    string account_id = 2;
    string label = 3;
}

enum VCSConnectionProvider{
    VCS_UNKNOWN = 0;
    VCS_GITHUB = 1;
    VCS_GITLAB = 2;
    VCS_BITBUCKET = 3;
}

message RevokeVCSTokenRequest{
    VCSConnectionProvider provider = 2;
    string vcs_id = 1;
}
message RenewVCSTokenRequest{
    VCSConnectionProvider provider = 1;
}

message CreateVCSConnectionRequest{
    VCSConnection vcs_connection = 1;
}

message GetVCSConnectionRequest{
    string account_id = 1;
    VCSConnectionProvider provider = 2;
}
