syntax = "proto3";
package alfred.user_profile.v1;

option go_package = "pb/";

import "google/protobuf/empty.proto";
import "google/api/annotation.proto";
import "include/graphql.proto";
import "google/protobuf/timestamp.proto";

service UserProfileService {
    rpc CreateUserProfile(CreateUserProfileRequest) returns (UserProfile);

    rpc UpdateUserProfile(UpdateUserProfileRequest) returns (UserProfile);

    rpc GetUserProfile(GetUserProfileRequest) returns (UserProfile){
        option (google.api.http) = {
            get: "/v1/user-profile/get-user-profile/{id}"
        };
        option (graphql.schema) = {
            type: query
            name: "user"
        };
    }
    rpc DeleteUserProfile(DeleteUserProfileRequest) returns (google.protobuf.Empty);

    rpc GetUserMe (google.protobuf.Empty) returns (UserProfile);
}

message CreateUserProfileRequest {
    UserProfile user_profile = 1;
}

message DeleteUserProfileRequest {
    string id = 1;
}

message UpdateUserProfileRequest {
    UserProfile user_profile = 1;
}

message GetUserProfileRequest {
    string id = 1;
}

message UserProfile {
    string id = 1;  //generated by uuid
    string sub = 2; // external unique_id
    string name = 3; // name of the user
    string email = 4; //email of user
    string phone_number = 5; // phone of user
    SOURCE external_source = 6;
    ProfilePicture profile = 7;
    google.protobuf.Timestamp token_valid_till = 8;
}

message ProfilePicture{
    string url = 1;
    string mime_type = 2;
}

enum SOURCE {
    UNKNOWN = 0;
    GITHUB = 1;
    GITLAB = 2;
    BITBUCKET = 3;
    EMAIL_PASSWORD = 4;
}
