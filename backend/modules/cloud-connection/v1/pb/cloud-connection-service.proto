syntax = "proto3";
package pb;

option go_package = "./pb";

import "google/protobuf/empty.proto";
import "google/api/annotation.proto";
import "include/graphql.proto";
import "google/protobuf/timestamp.proto";

service CloudConnectionService {

    rpc CreateCloudConnection(CreateCloudConnectionRequest) returns (CloudConnection){
        option (google.api.http) = {
            post: "/v1/cloud-connection/create-cloud-connection"
            body: "*"
        };
        option (graphql.schema) = {
            type: MUTATION   // decleare as Mutation
            name: "createCloudConnection" // query name
        };
    };
    rpc UpdateCloudConnection(UpdateCloudConnectionRequest) returns (CloudConnection){
        option (google.api.http) = {
            put: "/v1/cloud-connection/update-cloud-connection"
            body: "*"
        };
        option (graphql.schema) = {
            type: MUTATION   // decleare as Mutation
            name: "updateCloudConnection" // query name
        };
    }
    rpc GetCloudConnection(GetCloudConnectionRequest) returns (CloudConnection){
        option (google.api.http) = {
            get: "/v1/cloud-connection/get-cloud-connection/{id}"
        };
        option (graphql.schema) = {
            type: QUERY   // decleare as Mutation
            name: "cloudConnection" // query name
        };
    }
    rpc DeleteCloudConnection(DeleteCloudConnectionRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/cloud-connection/delete-cloud-connection/{id}"
        };
        option (graphql.schema) = {
            type: QUERY   // decleare as query
            name: "deleteCloudConnection" // query name
        };
    }
}

message CreateCloudConnectionRequest {
    CloudConnection cloud_connection = 1;
}

message DeleteCloudConnectionRequest {
    string id = 1;
}

message UpdateCloudConnectionRequest {
    CloudConnection cloud_connection = 1;
}

message GetCloudConnectionRequest {
    string id = 1;
}

message CloudConnection {
    //id generated by uuid
    string id = 1;
    // stored in encrypted form
    string client_id =2;
    // stored in encrypted form
    string client_secret =3;
    string account_id = 4;
    repeated string scope = 5;
    string provider = 6;
}
