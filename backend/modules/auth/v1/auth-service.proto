syntax = "proto3";
package alfred.auth.v1;

option go_package = "/pb";

import "google/api/annotation.proto";
import "google/protobuf/empty.proto";

service ValidateLoginService {
    rpc ValidateUserLogin (ValidateUserLoginRequest) returns (ValidateUserLoginResponse);
}

//ValidateUserLoginRequest contains user login credential.
message ValidateUserLoginRequest {
    //Id is the user Unique identifier
    string id = 1;
    // Password  is the user password
    string password = 2;
}

message ValidateUserLoginResponse {
    //Id is the user Unique identifier
    string id = 1;
}

service UserLoginService {

    // UserLogin provide a url of External OAuth login endpoint (Auth0)
    rpc UserLogin (google.protobuf.Empty) returns (UserLoginResponse) {
        option (google.api.http) = {
            get: "/v1/authentication/login"
        };
    };

    // UserLoginCallback receives a callback  from external OAuth application
    rpc UserLoginCallback (UserLoginCallbackRequest) returns (UserLoginCallbackResponse) {
        option (google.api.http) = {
            get: "/v1/authentication/callback"
        };
    };

    rpc UserLogout (google.protobuf.Empty) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            get: "/v1/authentication/logout"
        };
    };

    // GetUserLogin returns the specified user by its id.
    // rpc GetUserLogin (GetUserLoginRequest) returns (google.protobuf.Empty);

    // DeleteUserLogin is used to delete a user from the system, this will delete all
    // rpc DeleteUserLogin (DeleteUserLoginRequest) returns (google.protobuf.Empty);


    // rpc UpdateUserPassword (UpdateUserPasswordRequest) returns (google.protobuf.Empty);

    // ResetUserPassword , if a user has forgot the password then
    // this method can be used to reset the password
    // rpc ResetUserPassword (ResetUserPasswordRequest) returns (google.protobuf.Empty);

}

message UserLoginResponse{
    string url = 1;
}

message UserLoginCallbackRequest{
    string state = 1;
    string code = 2;
}

message UserLoginCallbackResponse{
    string id_token = 1;
    string access_token = 2;
    string user_id = 3;
}
//message GetUserLoginRequest {
//    // Id is the unique user id
//    string id = 1;// [(validate.rules).string.min_len = 3];
//}
//
//message DeleteUserLoginRequest {
//    // Id is the unique user id
//    string id = 1;// [(validate.rules).string.min_len = 3];
//}
//
//message UpdateUserPasswordRequest {
//    // Id is the unique user id
//    string id = 1 ;//[(validate.rules).string.min_len = 3];
//    // Password to be added against the given user id.
//    string old_password = 2;// [(validate.rules).string = { min_len:8  max_len:36}];
//    string new_password = 3;// [(validate.rules).string = { min_len:8  max_len:36}];
//}
//
//message ResetUserPasswordRequest {
//    // Id is the unique user id
//    string id = 1;// [(validate.rules).string.min_len = 3];
//    // Password to be added against the given user id.
//    string new_password = 3;// [(validate.rules).string = { min_len:8  max_len:36}];
//}
