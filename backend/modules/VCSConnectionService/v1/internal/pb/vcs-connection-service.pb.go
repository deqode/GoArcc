// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: vcs-connection-service.proto

package pb

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/ysugimoto/grpc-graphql-gateway/graphql"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VCSConnectionProvider int32

const (
	VCSConnectionProvider_VCS_UNKNOWN   VCSConnectionProvider = 0
	VCSConnectionProvider_VCS_GITHUB    VCSConnectionProvider = 1
	VCSConnectionProvider_VCS_GITLAB    VCSConnectionProvider = 2
	VCSConnectionProvider_VCS_BITBUCKET VCSConnectionProvider = 3
)

// Enum value maps for VCSConnectionProvider.
var (
	VCSConnectionProvider_name = map[int32]string{
		0: "VCS_UNKNOWN",
		1: "VCS_GITHUB",
		2: "VCS_GITLAB",
		3: "VCS_BITBUCKET",
	}
	VCSConnectionProvider_value = map[string]int32{
		"VCS_UNKNOWN":   0,
		"VCS_GITHUB":    1,
		"VCS_GITLAB":    2,
		"VCS_BITBUCKET": 3,
	}
)

func (x VCSConnectionProvider) Enum() *VCSConnectionProvider {
	p := new(VCSConnectionProvider)
	*p = x
	return p
}

func (x VCSConnectionProvider) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VCSConnectionProvider) Descriptor() protoreflect.EnumDescriptor {
	return file_vcs_connection_service_proto_enumTypes[0].Descriptor()
}

func (VCSConnectionProvider) Type() protoreflect.EnumType {
	return &file_vcs_connection_service_proto_enumTypes[0]
}

func (x VCSConnectionProvider) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VCSConnectionProvider.Descriptor instead.
func (VCSConnectionProvider) EnumDescriptor() ([]byte, []int) {
	return file_vcs_connection_service_proto_rawDescGZIP(), []int{0}
}

type VCSConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//id generated by uuid
	Id                 string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Label              string                `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	Provider           VCSConnectionProvider `protobuf:"varint,3,opt,name=provider,proto3,enum=pb.VCSConnectionProvider" json:"provider,omitempty"`
	ConnectionId       string                `protobuf:"bytes,4,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"`
	AccessToken        string                `protobuf:"bytes,5,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
	RefreshToken       string                `protobuf:"bytes,6,opt,name=refreshToken,proto3" json:"refreshToken,omitempty"`
	AccessTokenExpiry  *timestamp.Timestamp  `protobuf:"bytes,7,opt,name=accessTokenExpiry,proto3" json:"accessTokenExpiry,omitempty"`
	RefreshTokenExpiry *timestamp.Timestamp  `protobuf:"bytes,8,opt,name=refreshTokenExpiry,proto3" json:"refreshTokenExpiry,omitempty"`
	Revoked            bool                  `protobuf:"varint,9,opt,name=revoked,proto3" json:"revoked,omitempty"`
	AccountId          string                `protobuf:"bytes,10,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *VCSConnection) Reset() {
	*x = VCSConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vcs_connection_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VCSConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VCSConnection) ProtoMessage() {}

func (x *VCSConnection) ProtoReflect() protoreflect.Message {
	mi := &file_vcs_connection_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VCSConnection.ProtoReflect.Descriptor instead.
func (*VCSConnection) Descriptor() ([]byte, []int) {
	return file_vcs_connection_service_proto_rawDescGZIP(), []int{0}
}

func (x *VCSConnection) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VCSConnection) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *VCSConnection) GetProvider() VCSConnectionProvider {
	if x != nil {
		return x.Provider
	}
	return VCSConnectionProvider_VCS_UNKNOWN
}

func (x *VCSConnection) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *VCSConnection) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *VCSConnection) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *VCSConnection) GetAccessTokenExpiry() *timestamp.Timestamp {
	if x != nil {
		return x.AccessTokenExpiry
	}
	return nil
}

func (x *VCSConnection) GetRefreshTokenExpiry() *timestamp.Timestamp {
	if x != nil {
		return x.RefreshTokenExpiry
	}
	return nil
}

func (x *VCSConnection) GetRevoked() bool {
	if x != nil {
		return x.Revoked
	}
	return false
}

func (x *VCSConnection) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

type AccountVCSConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider  VCSConnectionProvider `protobuf:"varint,1,opt,name=provider,proto3,enum=pb.VCSConnectionProvider" json:"provider,omitempty"`
	AccountId string                `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Label     string                `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *AccountVCSConnection) Reset() {
	*x = AccountVCSConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vcs_connection_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountVCSConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountVCSConnection) ProtoMessage() {}

func (x *AccountVCSConnection) ProtoReflect() protoreflect.Message {
	mi := &file_vcs_connection_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountVCSConnection.ProtoReflect.Descriptor instead.
func (*AccountVCSConnection) Descriptor() ([]byte, []int) {
	return file_vcs_connection_service_proto_rawDescGZIP(), []int{1}
}

func (x *AccountVCSConnection) GetProvider() VCSConnectionProvider {
	if x != nil {
		return x.Provider
	}
	return VCSConnectionProvider_VCS_UNKNOWN
}

func (x *AccountVCSConnection) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *AccountVCSConnection) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type RevokeVCSTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider VCSConnectionProvider `protobuf:"varint,2,opt,name=provider,proto3,enum=pb.VCSConnectionProvider" json:"provider,omitempty"`
	VcsId    string                `protobuf:"bytes,1,opt,name=vcs_id,json=vcsId,proto3" json:"vcs_id,omitempty"`
}

func (x *RevokeVCSTokenRequest) Reset() {
	*x = RevokeVCSTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vcs_connection_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeVCSTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeVCSTokenRequest) ProtoMessage() {}

func (x *RevokeVCSTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vcs_connection_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeVCSTokenRequest.ProtoReflect.Descriptor instead.
func (*RevokeVCSTokenRequest) Descriptor() ([]byte, []int) {
	return file_vcs_connection_service_proto_rawDescGZIP(), []int{2}
}

func (x *RevokeVCSTokenRequest) GetProvider() VCSConnectionProvider {
	if x != nil {
		return x.Provider
	}
	return VCSConnectionProvider_VCS_UNKNOWN
}

func (x *RevokeVCSTokenRequest) GetVcsId() string {
	if x != nil {
		return x.VcsId
	}
	return ""
}

type RenewVCSTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider VCSConnectionProvider `protobuf:"varint,1,opt,name=provider,proto3,enum=pb.VCSConnectionProvider" json:"provider,omitempty"`
}

func (x *RenewVCSTokenRequest) Reset() {
	*x = RenewVCSTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vcs_connection_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenewVCSTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenewVCSTokenRequest) ProtoMessage() {}

func (x *RenewVCSTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vcs_connection_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenewVCSTokenRequest.ProtoReflect.Descriptor instead.
func (*RenewVCSTokenRequest) Descriptor() ([]byte, []int) {
	return file_vcs_connection_service_proto_rawDescGZIP(), []int{3}
}

func (x *RenewVCSTokenRequest) GetProvider() VCSConnectionProvider {
	if x != nil {
		return x.Provider
	}
	return VCSConnectionProvider_VCS_UNKNOWN
}

type CreateVCSConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VcsConnection *VCSConnection `protobuf:"bytes,1,opt,name=vcs_connection,json=vcsConnection,proto3" json:"vcs_connection,omitempty"`
}

func (x *CreateVCSConnectionRequest) Reset() {
	*x = CreateVCSConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vcs_connection_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVCSConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVCSConnectionRequest) ProtoMessage() {}

func (x *CreateVCSConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vcs_connection_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVCSConnectionRequest.ProtoReflect.Descriptor instead.
func (*CreateVCSConnectionRequest) Descriptor() ([]byte, []int) {
	return file_vcs_connection_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateVCSConnectionRequest) GetVcsConnection() *VCSConnection {
	if x != nil {
		return x.VcsConnection
	}
	return nil
}

type GetVCSConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string                `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Provider  VCSConnectionProvider `protobuf:"varint,2,opt,name=provider,proto3,enum=pb.VCSConnectionProvider" json:"provider,omitempty"`
}

func (x *GetVCSConnectionRequest) Reset() {
	*x = GetVCSConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_vcs_connection_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVCSConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVCSConnectionRequest) ProtoMessage() {}

func (x *GetVCSConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vcs_connection_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVCSConnectionRequest.ProtoReflect.Descriptor instead.
func (*GetVCSConnectionRequest) Descriptor() ([]byte, []int) {
	return file_vcs_connection_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetVCSConnectionRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *GetVCSConnectionRequest) GetProvider() VCSConnectionProvider {
	if x != nil {
		return x.Provider
	}
	return VCSConnectionProvider_VCS_UNKNOWN
}

var File_vcs_connection_service_proto protoreflect.FileDescriptor

var file_vcs_connection_service_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x76, 0x63, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02,
	0x70, 0x62, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x2f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x71, 0x6c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa6, 0x03, 0x0a, 0x0d, 0x56, 0x43, 0x53, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x35, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19,
	0x2e, 0x70, 0x62, 0x2e, 0x56, 0x43, 0x53, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x48,
	0x0a, 0x11, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x12, 0x4a, 0x0a, 0x12, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x12, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x78,
	0x70, 0x69, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x82, 0x01,
	0x0a, 0x14, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x43, 0x53, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x43,
	0x53, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x22, 0x65, 0x0a, 0x15, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x56, 0x43, 0x53, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x70, 0x62, 0x2e, 0x56, 0x43, 0x53, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x76, 0x63, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x63, 0x73, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x14, 0x52, 0x65, 0x6e,
	0x65, 0x77, 0x56, 0x43, 0x53, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x35, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x43, 0x53, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x56, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x56, 0x43, 0x53, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0e, 0x76, 0x63, 0x73, 0x5f, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x62, 0x2e, 0x56, 0x43, 0x53, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0d, 0x76, 0x63, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x6f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x56, 0x43, 0x53, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x70,
	0x62, 0x2e, 0x56, 0x43, 0x53, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x2a, 0x5b, 0x0a, 0x15, 0x56, 0x43, 0x53, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x0f, 0x0a, 0x0b, 0x56, 0x43,
	0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x56,
	0x43, 0x53, 0x5f, 0x47, 0x49, 0x54, 0x48, 0x55, 0x42, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x56,
	0x43, 0x53, 0x5f, 0x47, 0x49, 0x54, 0x4c, 0x41, 0x42, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x56,
	0x43, 0x53, 0x5f, 0x42, 0x49, 0x54, 0x42, 0x55, 0x43, 0x4b, 0x45, 0x54, 0x10, 0x03, 0x32, 0xac,
	0x02, 0x0a, 0x14, 0x56, 0x43, 0x53, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x56, 0x43,
	0x53, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x56, 0x43, 0x53, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x43,
	0x53, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x43, 0x53, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x43,
	0x53, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x56, 0x43, 0x53, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x43, 0x0a, 0x0e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x56,
	0x43, 0x53, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x56, 0x43, 0x53, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x41, 0x0a, 0x0d, 0x52, 0x65,
	0x6e, 0x65, 0x77, 0x56, 0x43, 0x53, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x56, 0x43, 0x53, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x06, 0x5a,
	0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_vcs_connection_service_proto_rawDescOnce sync.Once
	file_vcs_connection_service_proto_rawDescData = file_vcs_connection_service_proto_rawDesc
)

func file_vcs_connection_service_proto_rawDescGZIP() []byte {
	file_vcs_connection_service_proto_rawDescOnce.Do(func() {
		file_vcs_connection_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_vcs_connection_service_proto_rawDescData)
	})
	return file_vcs_connection_service_proto_rawDescData
}

var file_vcs_connection_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_vcs_connection_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_vcs_connection_service_proto_goTypes = []interface{}{
	(VCSConnectionProvider)(0),         // 0: pb.VCSConnectionProvider
	(*VCSConnection)(nil),              // 1: pb.VCSConnection
	(*AccountVCSConnection)(nil),       // 2: pb.AccountVCSConnection
	(*RevokeVCSTokenRequest)(nil),      // 3: pb.RevokeVCSTokenRequest
	(*RenewVCSTokenRequest)(nil),       // 4: pb.RenewVCSTokenRequest
	(*CreateVCSConnectionRequest)(nil), // 5: pb.CreateVCSConnectionRequest
	(*GetVCSConnectionRequest)(nil),    // 6: pb.GetVCSConnectionRequest
	(*timestamp.Timestamp)(nil),        // 7: google.protobuf.Timestamp
	(*empty.Empty)(nil),                // 8: google.protobuf.Empty
}
var file_vcs_connection_service_proto_depIdxs = []int32{
	0,  // 0: pb.VCSConnection.provider:type_name -> pb.VCSConnectionProvider
	7,  // 1: pb.VCSConnection.accessTokenExpiry:type_name -> google.protobuf.Timestamp
	7,  // 2: pb.VCSConnection.refreshTokenExpiry:type_name -> google.protobuf.Timestamp
	0,  // 3: pb.AccountVCSConnection.provider:type_name -> pb.VCSConnectionProvider
	0,  // 4: pb.RevokeVCSTokenRequest.provider:type_name -> pb.VCSConnectionProvider
	0,  // 5: pb.RenewVCSTokenRequest.provider:type_name -> pb.VCSConnectionProvider
	1,  // 6: pb.CreateVCSConnectionRequest.vcs_connection:type_name -> pb.VCSConnection
	0,  // 7: pb.GetVCSConnectionRequest.provider:type_name -> pb.VCSConnectionProvider
	6,  // 8: pb.VCSConnectionService.GetVCSConnection:input_type -> pb.GetVCSConnectionRequest
	5,  // 9: pb.VCSConnectionService.CreateVCSConnection:input_type -> pb.CreateVCSConnectionRequest
	3,  // 10: pb.VCSConnectionService.RevokeVCSToken:input_type -> pb.RevokeVCSTokenRequest
	4,  // 11: pb.VCSConnectionService.RenewVCSToken:input_type -> pb.RenewVCSTokenRequest
	1,  // 12: pb.VCSConnectionService.GetVCSConnection:output_type -> pb.VCSConnection
	1,  // 13: pb.VCSConnectionService.CreateVCSConnection:output_type -> pb.VCSConnection
	8,  // 14: pb.VCSConnectionService.RevokeVCSToken:output_type -> google.protobuf.Empty
	8,  // 15: pb.VCSConnectionService.RenewVCSToken:output_type -> google.protobuf.Empty
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_vcs_connection_service_proto_init() }
func file_vcs_connection_service_proto_init() {
	if File_vcs_connection_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_vcs_connection_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VCSConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vcs_connection_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountVCSConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vcs_connection_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeVCSTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vcs_connection_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenewVCSTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vcs_connection_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVCSConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_vcs_connection_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVCSConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_vcs_connection_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_vcs_connection_service_proto_goTypes,
		DependencyIndexes: file_vcs_connection_service_proto_depIdxs,
		EnumInfos:         file_vcs_connection_service_proto_enumTypes,
		MessageInfos:      file_vcs_connection_service_proto_msgTypes,
	}.Build()
	File_vcs_connection_service_proto = out.File
	file_vcs_connection_service_proto_rawDesc = nil
	file_vcs_connection_service_proto_goTypes = nil
	file_vcs_connection_service_proto_depIdxs = nil
}
