syntax = "proto3";
package pb;

option go_package = "./pb";

import "google/protobuf/empty.proto";
import "google/api/annotation.proto";
import "include/graphql.proto";
import "google/protobuf/timestamp.proto";

service AccountService {
    rpc CreateAccount(CreateAccountRequest) returns (Account){
        option (google.api.http) = {
            post: "/v1/account/create-account"
            body: "*"
        };
        option (graphql.schema) = {
            type: MUTATION   // decleare as Mutation
            name: "createAccount" // query name
        };
    };
    rpc UpdateAccount(UpdateAccountRequest) returns (Account){
        option (google.api.http) = {
            put: "/v1/account/update-account"
            body: "*"
        };
        option (graphql.schema) = {
            type: MUTATION   // decleare as Mutation
            name: "updateAccount" // query name
        };
    }
    rpc GetAccount(GetAccountRequest) returns (Account){
        option (google.api.http) = {
            get: "/v1/account/get-account/{id}"
        };
        option (graphql.schema) = {
            type: QUERY   // decleare as Mutation
            name: "account" // query name
        };
    }
    rpc DeleteAccount(DeleteAccountRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/v1/account/delete-account/{id}"
        };
        option (graphql.schema) = {
            type: QUERY   // decleare as query
            name: "deleteAccount" // query name
        };
    }
}

message CreateAccountRequest {
    Account account = 1;
}

message DeleteAccountRequest {
    string id = 1;
}

message UpdateAccountRequest {
    Account account = 1;
}

message GetAccountRequest {
    string id = 1;
}

message Account {
    //id generated by uuid
    string id = 1;
    string slug =2;
    string user_id = 3;
}
