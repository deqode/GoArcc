// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: default.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type AwsDefaultData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AwsContainerServices *AwsContainerServices `protobuf:"bytes,1,opt,name=aws_container_services,json=awsContainerServices,proto3" json:"aws_container_services,omitempty"`
	EcsContainerService  *EcsContainerService  `protobuf:"bytes,2,opt,name=ecs_container_service,json=ecsContainerService,proto3" json:"ecs_container_service,omitempty"`
	FragrateLaunchType   *FragrateLaunchType   `protobuf:"bytes,3,opt,name=fragrate_launch_type,json=fragrateLaunchType,proto3" json:"fragrate_launch_type,omitempty"`
	Ec2LaunchType        *Ec2LaunchType        `protobuf:"bytes,4,opt,name=ec2_launch_type,json=ec2LaunchType,proto3" json:"ec2_launch_type,omitempty"`
}

func (x *AwsDefaultData) Reset() {
	*x = AwsDefaultData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_default_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AwsDefaultData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsDefaultData) ProtoMessage() {}

func (x *AwsDefaultData) ProtoReflect() protoreflect.Message {
	mi := &file_default_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsDefaultData.ProtoReflect.Descriptor instead.
func (*AwsDefaultData) Descriptor() ([]byte, []int) {
	return file_default_proto_rawDescGZIP(), []int{0}
}

func (x *AwsDefaultData) GetAwsContainerServices() *AwsContainerServices {
	if x != nil {
		return x.AwsContainerServices
	}
	return nil
}

func (x *AwsDefaultData) GetEcsContainerService() *EcsContainerService {
	if x != nil {
		return x.EcsContainerService
	}
	return nil
}

func (x *AwsDefaultData) GetFragrateLaunchType() *FragrateLaunchType {
	if x != nil {
		return x.FragrateLaunchType
	}
	return nil
}

func (x *AwsDefaultData) GetEc2LaunchType() *Ec2LaunchType {
	if x != nil {
		return x.Ec2LaunchType
	}
	return nil
}

//EKS , ECS
type AwsContainerServices struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                []string             `protobuf:"bytes,3,rep,name=name,proto3" json:"name,omitempty"`
	EcsContainerService *EcsContainerService `protobuf:"bytes,1,opt,name=ecs_container_service,json=ecsContainerService,proto3" json:"ecs_container_service,omitempty"`
	EksContainerService *EksContainerService `protobuf:"bytes,2,opt,name=eks_container_service,json=eksContainerService,proto3" json:"eks_container_service,omitempty"`
}

func (x *AwsContainerServices) Reset() {
	*x = AwsContainerServices{}
	if protoimpl.UnsafeEnabled {
		mi := &file_default_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AwsContainerServices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwsContainerServices) ProtoMessage() {}

func (x *AwsContainerServices) ProtoReflect() protoreflect.Message {
	mi := &file_default_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwsContainerServices.ProtoReflect.Descriptor instead.
func (*AwsContainerServices) Descriptor() ([]byte, []int) {
	return file_default_proto_rawDescGZIP(), []int{1}
}

func (x *AwsContainerServices) GetName() []string {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *AwsContainerServices) GetEcsContainerService() *EcsContainerService {
	if x != nil {
		return x.EcsContainerService
	}
	return nil
}

func (x *AwsContainerServices) GetEksContainerService() *EksContainerService {
	if x != nil {
		return x.EksContainerService
	}
	return nil
}

type EksContainerService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EksContainerService) Reset() {
	*x = EksContainerService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_default_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EksContainerService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EksContainerService) ProtoMessage() {}

func (x *EksContainerService) ProtoReflect() protoreflect.Message {
	mi := &file_default_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EksContainerService.ProtoReflect.Descriptor instead.
func (*EksContainerService) Descriptor() ([]byte, []int) {
	return file_default_proto_rawDescGZIP(), []int{2}
}

type EcsContainerService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               []string            `protobuf:"bytes,3,rep,name=name,proto3" json:"name,omitempty"`
	Ec2LaunchType      *Ec2LaunchType      `protobuf:"bytes,1,opt,name=ec2_launch_type,json=ec2LaunchType,proto3" json:"ec2_launch_type,omitempty"`
	FragrateLaunchType *FragrateLaunchType `protobuf:"bytes,2,opt,name=fragrate_launch_type,json=fragrateLaunchType,proto3" json:"fragrate_launch_type,omitempty"`
}

func (x *EcsContainerService) Reset() {
	*x = EcsContainerService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_default_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EcsContainerService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EcsContainerService) ProtoMessage() {}

func (x *EcsContainerService) ProtoReflect() protoreflect.Message {
	mi := &file_default_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EcsContainerService.ProtoReflect.Descriptor instead.
func (*EcsContainerService) Descriptor() ([]byte, []int) {
	return file_default_proto_rawDescGZIP(), []int{3}
}

func (x *EcsContainerService) GetName() []string {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *EcsContainerService) GetEc2LaunchType() *Ec2LaunchType {
	if x != nil {
		return x.Ec2LaunchType
	}
	return nil
}

func (x *EcsContainerService) GetFragrateLaunchType() *FragrateLaunchType {
	if x != nil {
		return x.FragrateLaunchType
	}
	return nil
}

type FragrateLaunchType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name []string `protobuf:"bytes,1,rep,name=name,proto3" json:"name,omitempty"`
}

func (x *FragrateLaunchType) Reset() {
	*x = FragrateLaunchType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_default_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FragrateLaunchType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FragrateLaunchType) ProtoMessage() {}

func (x *FragrateLaunchType) ProtoReflect() protoreflect.Message {
	mi := &file_default_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FragrateLaunchType.ProtoReflect.Descriptor instead.
func (*FragrateLaunchType) Descriptor() ([]byte, []int) {
	return file_default_proto_rawDescGZIP(), []int{4}
}

func (x *FragrateLaunchType) GetName() []string {
	if x != nil {
		return x.Name
	}
	return nil
}

type Ec2LaunchType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                    []string                 `protobuf:"bytes,3,rep,name=name,proto3" json:"name,omitempty"`
	GeneralPurposeMachine   *GeneralPurposeMachine   `protobuf:"bytes,1,opt,name=general_purpose_machine,json=generalPurposeMachine,proto3" json:"general_purpose_machine,omitempty"`
	ComputeOptimizedMachine *ComputeOptimizedMachine `protobuf:"bytes,2,opt,name=compute_optimized_machine,json=computeOptimizedMachine,proto3" json:"compute_optimized_machine,omitempty"`
	MemoryOptimizedMachine  *MemoryOptimizedMachine  `protobuf:"bytes,5,opt,name=memory_optimized_machine,json=memoryOptimizedMachine,proto3" json:"memory_optimized_machine,omitempty"`
	AccelerateComputing     *AcceleratedComputing    `protobuf:"bytes,4,opt,name=accelerate_computing,json=accelerateComputing,proto3" json:"accelerate_computing,omitempty"`
}

func (x *Ec2LaunchType) Reset() {
	*x = Ec2LaunchType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_default_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ec2LaunchType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ec2LaunchType) ProtoMessage() {}

func (x *Ec2LaunchType) ProtoReflect() protoreflect.Message {
	mi := &file_default_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ec2LaunchType.ProtoReflect.Descriptor instead.
func (*Ec2LaunchType) Descriptor() ([]byte, []int) {
	return file_default_proto_rawDescGZIP(), []int{5}
}

func (x *Ec2LaunchType) GetName() []string {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *Ec2LaunchType) GetGeneralPurposeMachine() *GeneralPurposeMachine {
	if x != nil {
		return x.GeneralPurposeMachine
	}
	return nil
}

func (x *Ec2LaunchType) GetComputeOptimizedMachine() *ComputeOptimizedMachine {
	if x != nil {
		return x.ComputeOptimizedMachine
	}
	return nil
}

func (x *Ec2LaunchType) GetMemoryOptimizedMachine() *MemoryOptimizedMachine {
	if x != nil {
		return x.MemoryOptimizedMachine
	}
	return nil
}

func (x *Ec2LaunchType) GetAccelerateComputing() *AcceleratedComputing {
	if x != nil {
		return x.AccelerateComputing
	}
	return nil
}

type GeneralPurposeMachine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          []string         `protobuf:"bytes,3,rep,name=name,proto3" json:"name,omitempty"`
	MachineConfig []*MachineConfig `protobuf:"bytes,4,rep,name=machine_config,json=machineConfig,proto3" json:"machine_config,omitempty"`
}

func (x *GeneralPurposeMachine) Reset() {
	*x = GeneralPurposeMachine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_default_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneralPurposeMachine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneralPurposeMachine) ProtoMessage() {}

func (x *GeneralPurposeMachine) ProtoReflect() protoreflect.Message {
	mi := &file_default_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneralPurposeMachine.ProtoReflect.Descriptor instead.
func (*GeneralPurposeMachine) Descriptor() ([]byte, []int) {
	return file_default_proto_rawDescGZIP(), []int{6}
}

func (x *GeneralPurposeMachine) GetName() []string {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *GeneralPurposeMachine) GetMachineConfig() []*MachineConfig {
	if x != nil {
		return x.MachineConfig
	}
	return nil
}

type MachineConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent                    string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	InstanceSize              string `protobuf:"bytes,2,opt,name=instance_size,json=instanceSize,proto3" json:"instance_size,omitempty"`
	VCpu                      string `protobuf:"bytes,3,opt,name=v_cpu,json=vCpu,proto3" json:"v_cpu,omitempty"`
	MemoryInGib               string `protobuf:"bytes,4,opt,name=memory_in_gib,json=memoryInGib,proto3" json:"memory_in_gib,omitempty"`
	InstanceStorage           string `protobuf:"bytes,5,opt,name=instance_storage,json=instanceStorage,proto3" json:"instance_storage,omitempty"`
	InstanceStorageGib        string `protobuf:"bytes,18,opt,name=instance_storage_gib,json=instanceStorageGib,proto3" json:"instance_storage_gib,omitempty"`
	NetworkBandwidthGbpc      string `protobuf:"bytes,6,opt,name=network_bandwidth_gbpc,json=networkBandwidthGbpc,proto3" json:"network_bandwidth_gbpc,omitempty"`
	EbsBandwidthMbps          string `protobuf:"bytes,7,opt,name=ebs_bandwidth_mbps,json=ebsBandwidthMbps,proto3" json:"ebs_bandwidth_mbps,omitempty"`
	BaselinePerformance       string `protobuf:"bytes,8,opt,name=baseline_performance,json=baselinePerformance,proto3" json:"baseline_performance,omitempty"`
	CpuCreditsEarnedHr        string `protobuf:"bytes,9,opt,name=cpu_credits_earned_hr,json=cpuCreditsEarnedHr,proto3" json:"cpu_credits_earned_hr,omitempty"`
	NetworkBurstBandwidthGbps string `protobuf:"bytes,10,opt,name=network_burst_bandwidth_gbps,json=networkBurstBandwidthGbps,proto3" json:"network_burst_bandwidth_gbps,omitempty"`
	EbsBurstBandwidthMbps     string `protobuf:"bytes,11,opt,name=ebs_burst_bandwidth_mbps,json=ebsBurstBandwidthMbps,proto3" json:"ebs_burst_bandwidth_mbps,omitempty"`
	Mem                       string `protobuf:"bytes,12,opt,name=mem,proto3" json:"mem,omitempty"`
	MemGib                    string `protobuf:"bytes,19,opt,name=mem_gib,json=memGib,proto3" json:"mem_gib,omitempty"`
	NetworkPerformance        string `protobuf:"bytes,13,opt,name=network_performance,json=networkPerformance,proto3" json:"network_performance,omitempty"`
	Storage                   string `protobuf:"bytes,14,opt,name=storage,proto3" json:"storage,omitempty"`
	StorageGb                 string `protobuf:"bytes,23,opt,name=storage_gb,json=storageGb,proto3" json:"storage_gb,omitempty"`
	NetworkPerformanceGib     string `protobuf:"bytes,15,opt,name=network_performance_gib,json=networkPerformanceGib,proto3" json:"network_performance_gib,omitempty"`
	NetworkBandwidth          string `protobuf:"bytes,16,opt,name=network_bandwidth,json=networkBandwidth,proto3" json:"network_bandwidth,omitempty"`
	EbsBandwidth              string `protobuf:"bytes,17,opt,name=ebs_bandwidth,json=ebsBandwidth,proto3" json:"ebs_bandwidth,omitempty"`
	GpuMemGib                 string `protobuf:"bytes,20,opt,name=gpu_mem_gib,json=gpuMemGib,proto3" json:"gpu_mem_gib,omitempty"`
	GpuMem                    string `protobuf:"bytes,21,opt,name=gpu_mem,json=gpuMem,proto3" json:"gpu_mem,omitempty"`
	GpuP2P                    string `protobuf:"bytes,22,opt,name=gpu_p2p,json=gpuP2p,proto3" json:"gpu_p2p,omitempty"`
	DedicatedEbsBandwidth     string `protobuf:"bytes,24,opt,name=dedicated_ebs_bandwidth,json=dedicatedEbsBandwidth,proto3" json:"dedicated_ebs_bandwidth,omitempty"`
	LocalStorage              string `protobuf:"bytes,25,opt,name=local_storage,json=localStorage,proto3" json:"local_storage,omitempty"`
	LocalStorageGb            string `protobuf:"bytes,26,opt,name=local_storage_gb,json=localStorageGb,proto3" json:"local_storage_gb,omitempty"`
}

func (x *MachineConfig) Reset() {
	*x = MachineConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_default_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineConfig) ProtoMessage() {}

func (x *MachineConfig) ProtoReflect() protoreflect.Message {
	mi := &file_default_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineConfig.ProtoReflect.Descriptor instead.
func (*MachineConfig) Descriptor() ([]byte, []int) {
	return file_default_proto_rawDescGZIP(), []int{7}
}

func (x *MachineConfig) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *MachineConfig) GetInstanceSize() string {
	if x != nil {
		return x.InstanceSize
	}
	return ""
}

func (x *MachineConfig) GetVCpu() string {
	if x != nil {
		return x.VCpu
	}
	return ""
}

func (x *MachineConfig) GetMemoryInGib() string {
	if x != nil {
		return x.MemoryInGib
	}
	return ""
}

func (x *MachineConfig) GetInstanceStorage() string {
	if x != nil {
		return x.InstanceStorage
	}
	return ""
}

func (x *MachineConfig) GetInstanceStorageGib() string {
	if x != nil {
		return x.InstanceStorageGib
	}
	return ""
}

func (x *MachineConfig) GetNetworkBandwidthGbpc() string {
	if x != nil {
		return x.NetworkBandwidthGbpc
	}
	return ""
}

func (x *MachineConfig) GetEbsBandwidthMbps() string {
	if x != nil {
		return x.EbsBandwidthMbps
	}
	return ""
}

func (x *MachineConfig) GetBaselinePerformance() string {
	if x != nil {
		return x.BaselinePerformance
	}
	return ""
}

func (x *MachineConfig) GetCpuCreditsEarnedHr() string {
	if x != nil {
		return x.CpuCreditsEarnedHr
	}
	return ""
}

func (x *MachineConfig) GetNetworkBurstBandwidthGbps() string {
	if x != nil {
		return x.NetworkBurstBandwidthGbps
	}
	return ""
}

func (x *MachineConfig) GetEbsBurstBandwidthMbps() string {
	if x != nil {
		return x.EbsBurstBandwidthMbps
	}
	return ""
}

func (x *MachineConfig) GetMem() string {
	if x != nil {
		return x.Mem
	}
	return ""
}

func (x *MachineConfig) GetMemGib() string {
	if x != nil {
		return x.MemGib
	}
	return ""
}

func (x *MachineConfig) GetNetworkPerformance() string {
	if x != nil {
		return x.NetworkPerformance
	}
	return ""
}

func (x *MachineConfig) GetStorage() string {
	if x != nil {
		return x.Storage
	}
	return ""
}

func (x *MachineConfig) GetStorageGb() string {
	if x != nil {
		return x.StorageGb
	}
	return ""
}

func (x *MachineConfig) GetNetworkPerformanceGib() string {
	if x != nil {
		return x.NetworkPerformanceGib
	}
	return ""
}

func (x *MachineConfig) GetNetworkBandwidth() string {
	if x != nil {
		return x.NetworkBandwidth
	}
	return ""
}

func (x *MachineConfig) GetEbsBandwidth() string {
	if x != nil {
		return x.EbsBandwidth
	}
	return ""
}

func (x *MachineConfig) GetGpuMemGib() string {
	if x != nil {
		return x.GpuMemGib
	}
	return ""
}

func (x *MachineConfig) GetGpuMem() string {
	if x != nil {
		return x.GpuMem
	}
	return ""
}

func (x *MachineConfig) GetGpuP2P() string {
	if x != nil {
		return x.GpuP2P
	}
	return ""
}

func (x *MachineConfig) GetDedicatedEbsBandwidth() string {
	if x != nil {
		return x.DedicatedEbsBandwidth
	}
	return ""
}

func (x *MachineConfig) GetLocalStorage() string {
	if x != nil {
		return x.LocalStorage
	}
	return ""
}

func (x *MachineConfig) GetLocalStorageGb() string {
	if x != nil {
		return x.LocalStorageGb
	}
	return ""
}

type ComputeOptimizedMachine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          []string         `protobuf:"bytes,3,rep,name=name,proto3" json:"name,omitempty"`
	MachineConfig []*MachineConfig `protobuf:"bytes,4,rep,name=machine_config,json=machineConfig,proto3" json:"machine_config,omitempty"`
}

func (x *ComputeOptimizedMachine) Reset() {
	*x = ComputeOptimizedMachine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_default_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeOptimizedMachine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeOptimizedMachine) ProtoMessage() {}

func (x *ComputeOptimizedMachine) ProtoReflect() protoreflect.Message {
	mi := &file_default_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeOptimizedMachine.ProtoReflect.Descriptor instead.
func (*ComputeOptimizedMachine) Descriptor() ([]byte, []int) {
	return file_default_proto_rawDescGZIP(), []int{8}
}

func (x *ComputeOptimizedMachine) GetName() []string {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *ComputeOptimizedMachine) GetMachineConfig() []*MachineConfig {
	if x != nil {
		return x.MachineConfig
	}
	return nil
}

type MemoryOptimizedMachine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          []string         `protobuf:"bytes,3,rep,name=name,proto3" json:"name,omitempty"`
	MachineConfig []*MachineConfig `protobuf:"bytes,4,rep,name=machine_config,json=machineConfig,proto3" json:"machine_config,omitempty"`
}

func (x *MemoryOptimizedMachine) Reset() {
	*x = MemoryOptimizedMachine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_default_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemoryOptimizedMachine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemoryOptimizedMachine) ProtoMessage() {}

func (x *MemoryOptimizedMachine) ProtoReflect() protoreflect.Message {
	mi := &file_default_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemoryOptimizedMachine.ProtoReflect.Descriptor instead.
func (*MemoryOptimizedMachine) Descriptor() ([]byte, []int) {
	return file_default_proto_rawDescGZIP(), []int{9}
}

func (x *MemoryOptimizedMachine) GetName() []string {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *MemoryOptimizedMachine) GetMachineConfig() []*MachineConfig {
	if x != nil {
		return x.MachineConfig
	}
	return nil
}

type AcceleratedComputing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          []string         `protobuf:"bytes,3,rep,name=name,proto3" json:"name,omitempty"`
	MachineConfig []*MachineConfig `protobuf:"bytes,4,rep,name=machine_config,json=machineConfig,proto3" json:"machine_config,omitempty"`
}

func (x *AcceleratedComputing) Reset() {
	*x = AcceleratedComputing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_default_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceleratedComputing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceleratedComputing) ProtoMessage() {}

func (x *AcceleratedComputing) ProtoReflect() protoreflect.Message {
	mi := &file_default_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceleratedComputing.ProtoReflect.Descriptor instead.
func (*AcceleratedComputing) Descriptor() ([]byte, []int) {
	return file_default_proto_rawDescGZIP(), []int{10}
}

func (x *AcceleratedComputing) GetName() []string {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *AcceleratedComputing) GetMachineConfig() []*MachineConfig {
	if x != nil {
		return x.MachineConfig
	}
	return nil
}

var File_default_proto protoreflect.FileDescriptor

var file_default_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x02, 0x70, 0x62, 0x22, 0xb2, 0x02, 0x0a, 0x0e, 0x41, 0x77, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4e, 0x0a, 0x16, 0x61, 0x77, 0x73, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x77, 0x73, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x52, 0x14, 0x61, 0x77, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x4b, 0x0a, 0x15, 0x65, 0x63, 0x73, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x63, 0x73, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x13,
	0x65, 0x63, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x14, 0x66, 0x72, 0x61, 0x67, 0x72, 0x61, 0x74, 0x65, 0x5f,
	0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x72, 0x61, 0x67, 0x72, 0x61, 0x74, 0x65, 0x4c,
	0x61, 0x75, 0x6e, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x12, 0x66, 0x72, 0x61, 0x67, 0x72,
	0x61, 0x74, 0x65, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a,
	0x0f, 0x65, 0x63, 0x32, 0x5f, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x63, 0x32, 0x4c,
	0x61, 0x75, 0x6e, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x65, 0x63, 0x32, 0x4c, 0x61,
	0x75, 0x6e, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x22, 0xc4, 0x01, 0x0a, 0x14, 0x41, 0x77, 0x73,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4b, 0x0a, 0x15, 0x65, 0x63, 0x73, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x63, 0x73, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x13, 0x65,
	0x63, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x4b, 0x0a, 0x15, 0x65, 0x6b, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6b, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x13, 0x65, 0x6b, 0x73, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22,
	0x15, 0x0a, 0x13, 0x45, 0x6b, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0xae, 0x01, 0x0a, 0x13, 0x45, 0x63, 0x73, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0f, 0x65, 0x63, 0x32, 0x5f, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62,
	0x2e, 0x45, 0x63, 0x32, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d,
	0x65, 0x63, 0x32, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x48, 0x0a,
	0x14, 0x66, 0x72, 0x61, 0x67, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62,
	0x2e, 0x46, 0x72, 0x61, 0x67, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x12, 0x66, 0x72, 0x61, 0x67, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x75,
	0x6e, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x22, 0x28, 0x0a, 0x12, 0x46, 0x72, 0x61, 0x67, 0x72,
	0x61, 0x74, 0x65, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0xf2, 0x02, 0x0a, 0x0d, 0x45, 0x63, 0x32, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x51, 0x0a, 0x17, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x6c, 0x5f, 0x70, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x5f, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x6c, 0x50, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x52, 0x15, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x50, 0x75, 0x72, 0x70,
	0x6f, 0x73, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x57, 0x0a, 0x19, 0x63, 0x6f,
	0x6d, 0x70, 0x75, 0x74, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x5f,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69,
	0x7a, 0x65, 0x64, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x17, 0x63, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x12, 0x54, 0x0a, 0x18, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x6f, 0x70,
	0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x52, 0x16, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a,
	0x65, 0x64, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x4b, 0x0a, 0x14, 0x61, 0x63, 0x63,
	0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x69, 0x6e,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x63, 0x63,
	0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x13, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x65, 0x0a, 0x15, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x6c, 0x50, 0x75, 0x72, 0x70, 0x6f, 0x73, 0x65, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x0e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62,
	0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x9e, 0x08,
	0x0a, 0x0d, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x13, 0x0a, 0x05,
	0x76, 0x5f, 0x63, 0x70, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x76, 0x43, 0x70,
	0x75, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x5f, 0x67,
	0x69, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x49, 0x6e, 0x47, 0x69, 0x62, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x12, 0x30, 0x0a, 0x14, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x5f, 0x67, 0x69, 0x62, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x47,
	0x69, 0x62, 0x12, 0x34, 0x0a, 0x16, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x62, 0x61,
	0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x5f, 0x67, 0x62, 0x70, 0x63, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x14, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x42, 0x61, 0x6e, 0x64, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x47, 0x62, 0x70, 0x63, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x62, 0x73, 0x5f,
	0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x5f, 0x6d, 0x62, 0x70, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x62, 0x73, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x4d, 0x62, 0x70, 0x73, 0x12, 0x31, 0x0a, 0x14, 0x62, 0x61, 0x73, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x62, 0x61, 0x73, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x65,
	0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x63, 0x70, 0x75,
	0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x5f, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x5f,
	0x68, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x70, 0x75, 0x43, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x73, 0x45, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x48, 0x72, 0x12, 0x3f, 0x0a, 0x1c,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x62, 0x75, 0x72, 0x73, 0x74, 0x5f, 0x62, 0x61,
	0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x5f, 0x67, 0x62, 0x70, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x19, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x42, 0x75, 0x72, 0x73, 0x74,
	0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x47, 0x62, 0x70, 0x73, 0x12, 0x37, 0x0a,
	0x18, 0x65, 0x62, 0x73, 0x5f, 0x62, 0x75, 0x72, 0x73, 0x74, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x5f, 0x6d, 0x62, 0x70, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x15, 0x65, 0x62, 0x73, 0x42, 0x75, 0x72, 0x73, 0x74, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x4d, 0x62, 0x70, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x65, 0x6d, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x65, 0x6d, 0x5f,
	0x67, 0x69, 0x62, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x47, 0x69,
	0x62, 0x12, 0x2f, 0x0a, 0x13, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x70, 0x65, 0x72,
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x67, 0x62, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x47, 0x62, 0x12, 0x36, 0x0a, 0x17, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x67, 0x69, 0x62, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x6e, 0x63, 0x65,
	0x47, 0x69, 0x62, 0x12, 0x2b, 0x0a, 0x11, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x62,
	0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x62, 0x73, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74,
	0x68, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x62, 0x73, 0x42, 0x61, 0x6e, 0x64,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0b, 0x67, 0x70, 0x75, 0x5f, 0x6d, 0x65, 0x6d,
	0x5f, 0x67, 0x69, 0x62, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x70, 0x75, 0x4d,
	0x65, 0x6d, 0x47, 0x69, 0x62, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x70, 0x75, 0x5f, 0x6d, 0x65, 0x6d,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x70, 0x75, 0x4d, 0x65, 0x6d, 0x12, 0x17,
	0x0a, 0x07, 0x67, 0x70, 0x75, 0x5f, 0x70, 0x32, 0x70, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x67, 0x70, 0x75, 0x50, 0x32, 0x70, 0x12, 0x36, 0x0a, 0x17, 0x64, 0x65, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x62, 0x73, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x64, 0x65, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x64, 0x45, 0x62, 0x73, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12,
	0x23, 0x0a, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x67, 0x62, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x47, 0x62, 0x22, 0x67,
	0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a,
	0x65, 0x64, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a,
	0x0e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x66, 0x0a, 0x16, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x0e, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x62, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x0d, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0x64, 0x0a, 0x14, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f,
	0x6d, 0x70, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x0e, 0x6d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_default_proto_rawDescOnce sync.Once
	file_default_proto_rawDescData = file_default_proto_rawDesc
)

func file_default_proto_rawDescGZIP() []byte {
	file_default_proto_rawDescOnce.Do(func() {
		file_default_proto_rawDescData = protoimpl.X.CompressGZIP(file_default_proto_rawDescData)
	})
	return file_default_proto_rawDescData
}

var file_default_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_default_proto_goTypes = []interface{}{
	(*AwsDefaultData)(nil),          // 0: pb.AwsDefaultData
	(*AwsContainerServices)(nil),    // 1: pb.AwsContainerServices
	(*EksContainerService)(nil),     // 2: pb.EksContainerService
	(*EcsContainerService)(nil),     // 3: pb.EcsContainerService
	(*FragrateLaunchType)(nil),      // 4: pb.FragrateLaunchType
	(*Ec2LaunchType)(nil),           // 5: pb.Ec2LaunchType
	(*GeneralPurposeMachine)(nil),   // 6: pb.GeneralPurposeMachine
	(*MachineConfig)(nil),           // 7: pb.MachineConfig
	(*ComputeOptimizedMachine)(nil), // 8: pb.ComputeOptimizedMachine
	(*MemoryOptimizedMachine)(nil),  // 9: pb.MemoryOptimizedMachine
	(*AcceleratedComputing)(nil),    // 10: pb.AcceleratedComputing
}
var file_default_proto_depIdxs = []int32{
	1,  // 0: pb.AwsDefaultData.aws_container_services:type_name -> pb.AwsContainerServices
	3,  // 1: pb.AwsDefaultData.ecs_container_service:type_name -> pb.EcsContainerService
	4,  // 2: pb.AwsDefaultData.fragrate_launch_type:type_name -> pb.FragrateLaunchType
	5,  // 3: pb.AwsDefaultData.ec2_launch_type:type_name -> pb.Ec2LaunchType
	3,  // 4: pb.AwsContainerServices.ecs_container_service:type_name -> pb.EcsContainerService
	2,  // 5: pb.AwsContainerServices.eks_container_service:type_name -> pb.EksContainerService
	5,  // 6: pb.EcsContainerService.ec2_launch_type:type_name -> pb.Ec2LaunchType
	4,  // 7: pb.EcsContainerService.fragrate_launch_type:type_name -> pb.FragrateLaunchType
	6,  // 8: pb.Ec2LaunchType.general_purpose_machine:type_name -> pb.GeneralPurposeMachine
	8,  // 9: pb.Ec2LaunchType.compute_optimized_machine:type_name -> pb.ComputeOptimizedMachine
	9,  // 10: pb.Ec2LaunchType.memory_optimized_machine:type_name -> pb.MemoryOptimizedMachine
	10, // 11: pb.Ec2LaunchType.accelerate_computing:type_name -> pb.AcceleratedComputing
	7,  // 12: pb.GeneralPurposeMachine.machine_config:type_name -> pb.MachineConfig
	7,  // 13: pb.ComputeOptimizedMachine.machine_config:type_name -> pb.MachineConfig
	7,  // 14: pb.MemoryOptimizedMachine.machine_config:type_name -> pb.MachineConfig
	7,  // 15: pb.AcceleratedComputing.machine_config:type_name -> pb.MachineConfig
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_default_proto_init() }
func file_default_proto_init() {
	if File_default_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_default_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AwsDefaultData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_default_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AwsContainerServices); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_default_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EksContainerService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_default_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EcsContainerService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_default_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FragrateLaunchType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_default_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ec2LaunchType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_default_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneralPurposeMachine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_default_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_default_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeOptimizedMachine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_default_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemoryOptimizedMachine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_default_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceleratedComputing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_default_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_default_proto_goTypes,
		DependencyIndexes: file_default_proto_depIdxs,
		MessageInfos:      file_default_proto_msgTypes,
	}.Build()
	File_default_proto = out.File
	file_default_proto_rawDesc = nil
	file_default_proto_goTypes = nil
	file_default_proto_depIdxs = nil
}
