syntax = "proto3";
package pb;

option go_package = "./pb";

import "google/protobuf/empty.proto";
import "google/api/annotation.proto";
import "include/graphql.proto";
import "google/protobuf/timestamp.proto";

service UserProfileService {
    rpc CreateUserProfile(CreateUserProfileRequest) returns (UserProfile){
        option (google.api.http) = {
           post: "/v1/user-profile/create-user-profile"
           body: "*"
          };
        option (graphql.schema) = {
            type: MUTATION   // decleare as Mutation
            name: "createUserProfile" // query name
            };
    };
    rpc UpdateUserProfile(UpdateUserProfileRequest) returns (UserProfile){
        option (google.api.http) = {
            put: "/v1/user-profile/update-user-profile"
            body: "*"
             };
        option (graphql.schema) = {
            type: MUTATION   // decleare as Mutation
            name: "updateUserProfile" // query name
            };
    }
    rpc GetUserProfile(GetUserProfileRequest) returns (UserProfile){
        option (google.api.http) = {
           get: "/v1/user-profile/get-user-profile/{id}"
        };
        option (graphql.schema) = {
             type: QUERY   // decleare as Mutation
             name: "user" // query name
            };
    }
    rpc DeleteUserProfile(DeleteUserProfileRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
          delete: "/v1/user-profile/delete-user-profile/{id}"
          };
        option (graphql.schema) = {
             type: QUERY   // decleare as query
             name: "deleteUserProfile" // query name
            };
    }
    rpc GetUserMe (google.protobuf.Empty) returns (UserProfile);
}

message CreateUserProfileRequest {
    UserProfile user_profile = 1;
}

message DeleteUserProfileRequest {
    string id = 1;
}

message UpdateUserProfileRequest {
    UserProfile user_profile = 1;
}

message GetUserProfileRequest {
    string id = 1;
}

message UserProfile {
    //id generated by uuid
    string id = 1;
    // external unique_id
    string sub = 2;
    // name of the user
    string name = 3;
    //email of user
    string email = 4;
    // phone of user
    string phone_number = 5;
    SOURCE source = 6;
    ProfilePicture profile = 7;
    google.protobuf.Timestamp token_valid_till = 8;
}

message ProfilePicture{
    string url = 1;
    string mime_type = 2;
}

enum SOURCE {
    UNKNOWN = 0;
    GITHUB = 1;
    GITLAB = 2;
    BITBUCKET = 3;
    EMAIL_PASSWORD = 4;
}
