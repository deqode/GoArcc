// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// AccountInternalClient is the client API for AccountInternal service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AccountInternalClient interface {
	//CreateAccount create new account of a user
	CreateAccount(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*Account, error)
}

type accountInternalClient struct {
	cc grpc.ClientConnInterface
}

func NewAccountInternalClient(cc grpc.ClientConnInterface) AccountInternalClient {
	return &accountInternalClient{cc}
}

func (c *accountInternalClient) CreateAccount(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := c.cc.Invoke(ctx, "/alfred.account_internal.v1.AccountInternal/CreateAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AccountInternalServer is the server API for AccountInternal service.
// All implementations should embed UnimplementedAccountInternalServer
// for forward compatibility
type AccountInternalServer interface {
	//CreateAccount create new account of a user
	CreateAccount(context.Context, *CreateAccountRequest) (*Account, error)
}

// UnimplementedAccountInternalServer should be embedded to have forward compatible implementations.
type UnimplementedAccountInternalServer struct {
}

func (UnimplementedAccountInternalServer) CreateAccount(context.Context, *CreateAccountRequest) (*Account, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAccount not implemented")
}

// UnsafeAccountInternalServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AccountInternalServer will
// result in compilation errors.
type UnsafeAccountInternalServer interface {
	mustEmbedUnimplementedAccountInternalServer()
}

func RegisterAccountInternalServer(s grpc.ServiceRegistrar, srv AccountInternalServer) {
	s.RegisterService(&AccountInternal_ServiceDesc, srv)
}

func _AccountInternal_CreateAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountInternalServer).CreateAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/alfred.account_internal.v1.AccountInternal/CreateAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountInternalServer).CreateAccount(ctx, req.(*CreateAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// AccountInternal_ServiceDesc is the grpc.ServiceDesc for AccountInternal service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AccountInternal_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "alfred.account_internal.v1.AccountInternal",
	HandlerType: (*AccountInternalServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAccount",
			Handler:    _AccountInternal_CreateAccount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/account_int.proto",
}
