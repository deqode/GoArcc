// Code generated by proroc-gen-graphql, DO NOT EDIT.
package pb

import (
	"github.com/graphql-go/graphql"
)

var (
	gql__type_CreateAccountRequest  *graphql.Object      // message CreateAccountRequest in pb/account_int.proto
	gql__type_Account               *graphql.Object      // message Account in pb/account_int.proto
	gql__input_CreateAccountRequest *graphql.InputObject // message CreateAccountRequest in pb/account_int.proto
	gql__input_Account              *graphql.InputObject // message Account in pb/account_int.proto
)

func Gql__type_CreateAccountRequest() *graphql.Object {
	if gql__type_CreateAccountRequest == nil {
		gql__type_CreateAccountRequest = graphql.NewObject(graphql.ObjectConfig{
			Name: "Pb_Type_CreateAccountRequest",
			Fields: graphql.Fields{
				"account": &graphql.Field{
					Type: Gql__type_Account(),
				},
			},
		})
	}
	return gql__type_CreateAccountRequest
}

func Gql__type_Account() *graphql.Object {
	if gql__type_Account == nil {
		gql__type_Account = graphql.NewObject(graphql.ObjectConfig{
			Name: "Pb_Type_Account",
			Fields: graphql.Fields{
				"id": &graphql.Field{
					Type:        graphql.String,
					Description: `id generated by uuid`,
				},
				"slug": &graphql.Field{
					Type:        graphql.String,
					Description: `multiple account identify by slug on ui`,
				},
				"user_id": &graphql.Field{
					Type:        graphql.NewNonNull(graphql.String),
					Description: `userId of a user`,
				},
			},
		})
	}
	return gql__type_Account
}

func Gql__input_CreateAccountRequest() *graphql.InputObject {
	if gql__input_CreateAccountRequest == nil {
		gql__input_CreateAccountRequest = graphql.NewInputObject(graphql.InputObjectConfig{
			Name: "Pb_Input_CreateAccountRequest",
			Fields: graphql.InputObjectConfigFieldMap{
				"account": &graphql.InputObjectFieldConfig{
					Type: Gql__input_Account(),
				},
			},
		})
	}
	return gql__input_CreateAccountRequest
}

func Gql__input_Account() *graphql.InputObject {
	if gql__input_Account == nil {
		gql__input_Account = graphql.NewInputObject(graphql.InputObjectConfig{
			Name: "Pb_Input_Account",
			Fields: graphql.InputObjectConfigFieldMap{
				"id": &graphql.InputObjectFieldConfig{
					Description: `id generated by uuid`,
					Type:        graphql.String,
				},
				"slug": &graphql.InputObjectFieldConfig{
					Description: `multiple account identify by slug on ui`,
					Type:        graphql.String,
				},
				"user_id": &graphql.InputObjectFieldConfig{
					Description: `userId of a user`,
					Type:        graphql.NewNonNull(graphql.String),
				},
			},
		})
	}
	return gql__input_Account
}
