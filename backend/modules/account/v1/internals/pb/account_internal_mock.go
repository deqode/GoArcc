// Code generated by MockGen. DO NOT EDIT.
// Source: account_internal_grpc.pb.go

// Package pb is a generated GoMock package.
package pb

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	grpc "google.golang.org/grpc"
)

// MockAccountInternalClient is a mock of AccountInternalClient interface.
type MockAccountInternalClient struct {
	ctrl     *gomock.Controller
	recorder *MockAccountInternalClientMockRecorder
}

// MockAccountInternalClientMockRecorder is the mock recorder for MockAccountInternalClient.
type MockAccountInternalClientMockRecorder struct {
	mock *MockAccountInternalClient
}

// NewMockAccountInternalClient creates a new mock instance.
func NewMockAccountInternalClient(ctrl *gomock.Controller) *MockAccountInternalClient {
	mock := &MockAccountInternalClient{ctrl: ctrl}
	mock.recorder = &MockAccountInternalClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccountInternalClient) EXPECT() *MockAccountInternalClientMockRecorder {
	return m.recorder
}

// CreateAccount mocks base method.
func (m *MockAccountInternalClient) CreateAccount(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*Account, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CreateAccount", varargs...)
	ret0, _ := ret[0].(*Account)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAccount indicates an expected call of CreateAccount.
func (mr *MockAccountInternalClientMockRecorder) CreateAccount(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAccount", reflect.TypeOf((*MockAccountInternalClient)(nil).CreateAccount), varargs...)
}

// MockAccountInternalServer is a mock of AccountInternalServer interface.
type MockAccountInternalServer struct {
	ctrl     *gomock.Controller
	recorder *MockAccountInternalServerMockRecorder
}

// MockAccountInternalServerMockRecorder is the mock recorder for MockAccountInternalServer.
type MockAccountInternalServerMockRecorder struct {
	mock *MockAccountInternalServer
}

// NewMockAccountInternalServer creates a new mock instance.
func NewMockAccountInternalServer(ctrl *gomock.Controller) *MockAccountInternalServer {
	mock := &MockAccountInternalServer{ctrl: ctrl}
	mock.recorder = &MockAccountInternalServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAccountInternalServer) EXPECT() *MockAccountInternalServerMockRecorder {
	return m.recorder
}

// CreateAccount mocks base method.
func (m *MockAccountInternalServer) CreateAccount(arg0 context.Context, arg1 *CreateAccountRequest) (*Account, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAccount", arg0, arg1)
	ret0, _ := ret[0].(*Account)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAccount indicates an expected call of CreateAccount.
func (mr *MockAccountInternalServerMockRecorder) CreateAccount(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAccount", reflect.TypeOf((*MockAccountInternalServer)(nil).CreateAccount), arg0, arg1)
}

// MockUnsafeAccountInternalServer is a mock of UnsafeAccountInternalServer interface.
type MockUnsafeAccountInternalServer struct {
	ctrl     *gomock.Controller
	recorder *MockUnsafeAccountInternalServerMockRecorder
}

// MockUnsafeAccountInternalServerMockRecorder is the mock recorder for MockUnsafeAccountInternalServer.
type MockUnsafeAccountInternalServerMockRecorder struct {
	mock *MockUnsafeAccountInternalServer
}

// NewMockUnsafeAccountInternalServer creates a new mock instance.
func NewMockUnsafeAccountInternalServer(ctrl *gomock.Controller) *MockUnsafeAccountInternalServer {
	mock := &MockUnsafeAccountInternalServer{ctrl: ctrl}
	mock.recorder = &MockUnsafeAccountInternalServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUnsafeAccountInternalServer) EXPECT() *MockUnsafeAccountInternalServerMockRecorder {
	return m.recorder
}

// mustEmbedUnimplementedAccountInternalServer mocks base method.
func (m *MockUnsafeAccountInternalServer) mustEmbedUnimplementedAccountInternalServer() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "mustEmbedUnimplementedAccountInternalServer")
}

// mustEmbedUnimplementedAccountInternalServer indicates an expected call of mustEmbedUnimplementedAccountInternalServer.
func (mr *MockUnsafeAccountInternalServerMockRecorder) mustEmbedUnimplementedAccountInternalServer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mustEmbedUnimplementedAccountInternalServer", reflect.TypeOf((*MockUnsafeAccountInternalServer)(nil).mustEmbedUnimplementedAccountInternalServer))
}
