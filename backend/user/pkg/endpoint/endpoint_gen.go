// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	endpoint "github.com/go-kit/kit/endpoint"
	service "user/pkg/service"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	CreateUserEndpoint endpoint.Endpoint
	UpdateUserEndpoint endpoint.Endpoint
	GetUserEndpoint    endpoint.Endpoint
	DeleteUserEndpoint endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.UserService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		CreateUserEndpoint: MakeCreateUserEndpoint(s),
		DeleteUserEndpoint: MakeDeleteUserEndpoint(s),
		GetUserEndpoint:    MakeGetUserEndpoint(s),
		UpdateUserEndpoint: MakeUpdateUserEndpoint(s),
	}
	for _, m := range mdw["CreateUser"] {
		eps.CreateUserEndpoint = m(eps.CreateUserEndpoint)
	}
	for _, m := range mdw["UpdateUser"] {
		eps.UpdateUserEndpoint = m(eps.UpdateUserEndpoint)
	}
	for _, m := range mdw["GetUser"] {
		eps.GetUserEndpoint = m(eps.GetUserEndpoint)
	}
	for _, m := range mdw["DeleteUser"] {
		eps.DeleteUserEndpoint = m(eps.DeleteUserEndpoint)
	}
	return eps
}
