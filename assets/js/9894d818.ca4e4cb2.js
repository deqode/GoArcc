(self.webpackChunkgo_arcc=self.webpackChunkgo_arcc||[]).push([[715],{2262:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return g}});var a=n(2122),o=n(9756),r=(n(7294),n(3905)),i=["components"],l={sidebar_position:3},s=void 0,c={unversionedId:"Introduction/Directory Definition",id:"Introduction/Directory Definition",isDocsHomePage:!1,title:"Directory Definition",description:"Before you start writing your services you need to understand how GoArcc works",source:"@site/docs/Introduction/Directory Definition.md",sourceDirName:"Introduction",slug:"/Introduction/Directory Definition",permalink:"/GoArcc/docs/Introduction/Directory Definition",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/Introduction/Directory Definition.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Prerequisite",permalink:"/GoArcc/docs/Introduction/Prerequisite"}},p=[{value:"<u>Directory Structure</u>",id:"directory-structure",children:[{value:"<u>Config</u>",id:"config",children:[]},{value:"<u>Db</u>",id:"db",children:[]},{value:"<u>Logger</u>",id:"logger",children:[]},{value:"<u>Cmd</u>",id:"cmd",children:[]},{value:"<u> Servers </u>",id:"servers",children:[]}]}],d={toc:p};function g(e){var t=e.components,l=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Before you start writing your services you need to understand how GoArcc works\nand what is the definition of its directory.\nLet's get deep dive into the definition and codebase."),(0,r.kt)("h2",{id:"directory-structure"},(0,r.kt)("u",null,"Directory Structure")),(0,r.kt)("p",null,"We have followed a standard go directory structure for our codebase so that developers will easily get friendly with it.\nwe have multiple directories inside GoArcc. we have used multiples of libraries, we will go through each one by one."),(0,r.kt)("p",null,"In below diagram we have multiple of directories such as ",(0,r.kt)("strong",{parentName:"p"},"cmd")," , ",(0,r.kt)("strong",{parentName:"p"},"client")," , ",(0,r.kt)("strong",{parentName:"p"},"logger")," , ",(0,r.kt)("strong",{parentName:"p"},"protos")," ",(0,r.kt)("strong",{parentName:"p"},"etc"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"GoArcc Directory Structure",src:n(3141).Z})),(0,r.kt)("h3",{id:"config"},(0,r.kt)("u",null,"Config")),(0,r.kt)("p",null,"When we start the GoArcc application we need some information so that our application will start smoothly.\nAs we have said earlier, we are supporting gRPC , rest, graphql . So we need a different port\nfor all the servers and different settings to start the application."),(0,r.kt)("p",null,"We have config.yaml file in the root directory.\nYou can change any information from the file like id, password of database, etc according to your use case."),(0,r.kt)("p",null,"see the below example of config.yaml file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"\ngrpc:\n  port: 8000\n  host: localhost\n  request_timeout: 20\n\ngraphql:\n  port: 8081\n  host: localhost\n  request_Timeout: 20\n\nrest:\n  port: 8082\n  host: localhost\n  request_timeout: 20\n\n")),(0,r.kt)("h4",{id:"how-you-can-add-custom-config"},(0,r.kt)("u",null,"How you can add custom config?")),(0,r.kt)("p",null,"If you want to add some extra configs then you need to make a struct and place inside the main struct."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-golang"},'\ntype Config struct {\n    Grpc               GrpcServerConfig        `mapstructure:"GRPC"`\n    Graphql            GraphqlServerConfig     `mapstructure:"GRAPHQL"`\n    Rest               RestServerConfig        `mapstructure:"REST"`\n    HealthCheck        HealthCheckServerConfig `mapstructure:"HEALTH_CHECK"`\n    Logger             LoggerConfig            `mapstructure:"LOGGER"`\n    Postgres           PostgresConfig          `mapstructure:"POSTGRES"`\n    Metrics            MetricsConfig           `mapstructure:"METRICS"`\n    Jaeger             JaegerServerConfig      `mapstructure:"JAEGER"`\n    Auth               AuthConfig              `mapstructure:"AUTH"`\n    GithubVCSConfig    VCSSConfig              `mapstructure:"GITHUB_VCS_CONFIG"`\n    CadenceConfig      CadenceConfig           `mapstructure:"CADENCE_CONFIG"`\n}\n\n')),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Bright Side")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"If you pass the environment variables then those variables will be overridden\nto the default variables which is present in the config.yaml file."))),(0,r.kt)("h4",{id:"how-you-can-pass-enviroment-variables"},(0,r.kt)("u",null,"How you can pass enviroment variables?")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\nGRPC_PORT = 8085\n\n")),(0,r.kt)("h3",{id:"db"},(0,r.kt)("u",null,"Db")),(0,r.kt)("p",null,"Inside connection.go file we have a method called NewConnection().\nNewConnection is responsible for open the database connection.\nDb instance is bind with the fx provider so we don't need to call this method."),(0,r.kt)("p",null,"See the below code."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-golang"},'\nfunc NewConnection(config *config.Config) *gorm.DB {\n    psqlInfo := fmt.Sprintf("host=%s port=%s user=%s "+\n        "password=%s dbname=%s sslmode=disable Timezone=Asia/Shanghai",\n        config.Postgres.Host, config.Postgres.Port, config.Postgres.User, config.Postgres.Password, config.Postgres.DbName)\n\n    // Refrence taken from https://github.com/go-gorm/postgres\n    db, err := gorm.Open(postgres.New(postgres.Config{\n        DSN:                  psqlInfo,\n        PreferSimpleProtocol: true, // disables implicit prepared statement usage\n    }), &gorm.Config{})\n\n    if err != nil {\n        logger.Log.Fatal("GORM connection failed", zap.Error(err))\n        panic(err)\n    }\n\n    logger.Log.Info("connection established with the database")\n    //No need to close the connection because we have a single pool of connection.\n    return db\n}\n\n')),(0,r.kt)("p",null,"In the above code you can change the setting like timezone , ssl mode etc."),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Bright Side")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"We have used GORM as an ORM. If you want to explore GORM then once go through the docs.\n(",(0,r.kt)("a",{parentName:"p",href:"https://gorm.io/docs/index.html"},"https://gorm.io/docs/index.html"),")"))),(0,r.kt)("h3",{id:"logger"},(0,r.kt)("u",null,"Logger")),(0,r.kt)("p",null,"As we know logging is an essential part of the application.\nLogging helps in troubleshooting the application and you can also see the performance of your infrastructure.\nLogging provides more visibility to your application at the components level.\nLogs contain important information so that anyone can debug or find the fault if exist."),(0,r.kt)("p",null,"We have implemented log in the whole application so that developers will no need to worry about logging."),(0,r.kt)("p",null,"In golang, we have multiple logging libraries. So the team has decided to use a zap logger."),(0,r.kt)("h4",{id:"why-we-have-used-zap-logger"},(0,r.kt)("u",null,"Why we have used zap logger? ")),(0,r.kt)("p",null,"Just see the comparison below \ud83d\ude00"),(0,r.kt)("p",null,"Log a message and 10 fields:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Package"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Time"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Time % to zap"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Objects Allocated"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"\u26a1 zap"),(0,r.kt)("td",{parentName:"tr",align:"center"},"862 ns/op"),(0,r.kt)("td",{parentName:"tr",align:"center"},"+0%"),(0,r.kt)("td",{parentName:"tr",align:"center"},"5 allocs/op")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"\u26a1 zap (sugared)"),(0,r.kt)("td",{parentName:"tr",align:"center"},"1250 ns/op"),(0,r.kt)("td",{parentName:"tr",align:"center"},"+45%"),(0,r.kt)("td",{parentName:"tr",align:"center"},"11 allocs/op")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"zerolog"),(0,r.kt)("td",{parentName:"tr",align:"center"},"4021 ns/op"),(0,r.kt)("td",{parentName:"tr",align:"center"},"+366%"),(0,r.kt)("td",{parentName:"tr",align:"center"},"76 allocs/op")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"go-kit"),(0,r.kt)("td",{parentName:"tr",align:"center"},"4542 ns/op"),(0,r.kt)("td",{parentName:"tr",align:"center"},"+427%"),(0,r.kt)("td",{parentName:"tr",align:"center"},"105 allocs/op")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"apex/log"),(0,r.kt)("td",{parentName:"tr",align:"center"},"26785 ns/op"),(0,r.kt)("td",{parentName:"tr",align:"center"},"+3007%"),(0,r.kt)("td",{parentName:"tr",align:"center"},"115 allocs/op")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"logrus"),(0,r.kt)("td",{parentName:"tr",align:"center"},"29501 ns/op"),(0,r.kt)("td",{parentName:"tr",align:"center"},"+3322%"),(0,r.kt)("td",{parentName:"tr",align:"center"},"125 allocs/op")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"log15"),(0,r.kt)("td",{parentName:"tr",align:"center"},"29906 ns/op"),(0,r.kt)("td",{parentName:"tr",align:"center"},"+3369%"),(0,r.kt)("td",{parentName:"tr",align:"center"},"122 allocs/op")))),(0,r.kt)("p",null,"In main method there is a method called logger.Init().\nThis method will create a global logger for your application and takes log level from config.yaml\nfile."),(0,r.kt)("p",null,"Apart from that if we need to overide the log level we just set an env variable or you can also change in the\nconfig.yaml file."),(0,r.kt)("h4",{id:"zap-log-level-reference"},(0,r.kt)("u",null,"Zap log level reference ")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-golang"},"// reference taken from https://github.com/uber-go/zap/blob/120b08c8fae5be92bc7323ca78b25cd790e8c37a/level.go#L28\nconst (\n    // DebugLevel logs are typically voluminous, and are usually disabled in\n    // production.\n    DebugLevel = zapcore.DebugLevel\n    // InfoLevel is the default logging priority.\n    InfoLevel = zapcore.InfoLevel\n    // WarnLevel logs are more important than Info, but don't need individual\n    // human review.\n    WarnLevel = zapcore.WarnLevel\n    // ErrorLevel logs are high-priority. If an application is running smoothly,\n    // it shouldn't generate any error-level logs.\n    ErrorLevel = zapcore.ErrorLevel\n    // DPanicLevel logs are particularly important errors. In development the\n    // logger panics after writing the message.\n    DPanicLevel = zapcore.DPanicLevel\n    // PanicLevel logs a message, then panics.\n    PanicLevel = zapcore.PanicLevel\n    // FatalLevel logs a message, then calls os.Exit(1).\n    FatalLevel = zapcore.FatalLevel\n)\n\n")),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Bright Side")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Zap logger have different log level. You can read more about zap (",(0,r.kt)("a",{parentName:"p",href:"https://pkg.go.dev/go.uber.org/zap"},"https://pkg.go.dev/go.uber.org/zap"),")\nYou can also see the different log level of zap"))),(0,r.kt)("h3",{id:"cmd"},(0,r.kt)("u",null,"Cmd")),(0,r.kt)("p",null,"As we know in golang we have a convention of cmd folder\nand it has its own significance.\nIf you want to read about the go project layout then go through\nthis doc once (",(0,r.kt)("a",{parentName:"p",href:"https://github.com/golang-standards/project-layout"},"https://github.com/golang-standards/project-layout"),")."),(0,r.kt)("p",null,"lets come to the our code base.\nwhen we go inside the cmd folder we see there are multiples of files(paste github link here)."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"main.go")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"invokers.go")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"providers.go")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"app.go"))),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Bright Side")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Before understanding the use of each file first go through dependency\nmanagement in golang.\n(",(0,r.kt)("a",{parentName:"p",href:"https://github.com/uber-go/fx"},"https://github.com/uber-go/fx"),")"))),(0,r.kt)("h4",{id:"maingo"},(0,r.kt)("u",null,"main.go")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-golang"},'\npackage main\n\nimport (\n    "go.uber.org/zap"\n    "goarcc/logger"\n)\n\nfunc main() {\n    logger.Init(logger.Config{\n        LogLevel:    zap.DebugLevel, \n        Development: false,\n    })\n    GetApp().Run()\n}\n\n')),(0,r.kt)("p",null,"As we know main.go is the entry point for any go application.\nHere logger.Init() will take the config object as a parameter and initialize the whole application with debug level.\nThis means in the standard output you will able to see the debug levels of the log only."),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"If you want to see the info or warn level logs then you need to just pass the Zap loglevel in config object."))),(0,r.kt)("h4",{id:"invokersgo"},(0,r.kt)("u",null,"invokers.go")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-golang"},'\npackage main\n\nimport (\n    "go.uber.org/fx"\n    "goarcc/servers/cleanup"\n    "goarcc/servers/graphql"\n    "goarcc/servers/grpc"\n    "goarcc/servers/healthcheck"\n    "goarcc/servers/rest"\n)\n\n\nfunc GetInvokersOptions() fx.Option {\n    return fx.Invoke(\n        grpc.RunGRPCServer,\n        grpc.RegisterGrpcModules,\n        rest.RunRestServer,\n        graphql.RunGraphqlServer,\n        healthcheck.HealthCheckRunner,\n        cleanup.Cleanup,\n    )\n}\n\n')),(0,r.kt)("p",null,"Let's understand the above code. Here We have a method GetInvokersOptions().\nThis function is responsible to start multiple servers.\nwe have gRPC , rest, graphql server. Apart from that we also have a health check server.\ncleanup code will be executed when we stop our application.\nGenerally, In cleanup code, we gracefully shutdown everything and clears the cache\nif any present."),(0,r.kt)("div",{className:"admonition admonition-danger alert alert--danger"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"Alarm")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Inside Invoker, we have multiple methods. The invoker method will execute each method sequentially.\nSo there are multiple dependencies among them and if you change the order of execution you will start getting lots of errors.\nSo, if you have explored the fx library then you can play with invokers and providers."))),(0,r.kt)("h4",{id:"providersgo"},(0,r.kt)("u",null,"providers.go")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-golang"},'\npackage main\n\nimport (\n    "go.uber.org/fx"\n    "goarcc/client/grpcClient"\n    "goarcc/config"\n    "goarcc/db"\n    "goarcc/servers/cleanup"\n    "goarcc/servers/grpc"\n    "goarcc/servers/openTracing/tracer/jaeger"\n)\n\nfunc GetProviderOptions() []fx.Option {\n    return []fx.Option{\n        config.ProviderFx,\n        grpc.InitGrpcBeforeServingFx,\n        db.DatabaseConnectionFx,\n        cleanup.CleanupFx,\n        jaeger.JaegerTracerFx,\n        grpcClient.ConnectionFx,\n    }\n}\n\n')),(0,r.kt)("p",null,"Let's understand the above code. Here We have a method GetProvidersOptions().\nThis function load all the dependency which will need to start the application.\nThere are multiples of server and each server have some sort of dependency or need some predefined object\nat runtime."),(0,r.kt)("h4",{id:"appgo"},(0,r.kt)("u",null,"app.go")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-golang"},'\npackage main\n\nimport "go.uber.org/fx"\n\nfunc GetApp() *fx.App {\n    opts := make([]fx.Option, 0)\n    opts = GetProviderOptions()\n    opts = append(opts, GetInvokersOptions())\n    return fx.New(\n        opts...,\n    )\n}\n\n')),(0,r.kt)("p",null,"Here GetApp() method will resolve  all the dependency and bind the whole application as an object.\nSo , In main file you can easily start the application."),(0,r.kt)("h3",{id:"servers"},(0,r.kt)("u",null," Servers ")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"GoArcc Servers Structure",src:n(6195).Z})),(0,r.kt)("p",null,"Servers are the core part of this project. you can see in the above that we have supported multiples of servers.\nlets go into the deep dive of the code base so you can understand easily and change accordingly."))}g.isMDXComponent=!0},3141:function(e,t,n){"use strict";t.Z=n.p+"assets/images/goArcc-bb2276616994c26a9456fb077125f209.jpg"},6195:function(e,t,n){"use strict";t.Z=n.p+"assets/images/servers-4f5ba225c2c6fa9c61844e7ec6e2b440.jpg"}}]);